<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mpesaIntegration</name>
    </assembly>
    <members>
        <member name="T:mpesaIntegration.Controllers.AuthController">
            <summary>
            Handles authentication-related requests
            </summary>
        </member>
        <member name="M:mpesaIntegration.Controllers.AuthController.Register(mpesaIntegration.Models.Authentication.RegisterRequest)">
            <summary>
            Registers a new user
            </summary>
            <param name="request">User registration details</param>
            <returns>Authentication response with tokens</returns>
        </member>
        <member name="M:mpesaIntegration.Controllers.AuthController.Login(mpesaIntegration.Models.Authentication.LoginRequest)">
            <summary>
            Authenticates an existing user
            </summary>
            <param name="request">User login credentials</param>
            <returns>Authentication response with tokens</returns>
        </member>
        <member name="T:mpesaIntegration.Data.ApplicationDbContext">
            <summary>
            Database context for the application using Entity Framework Core
            </summary>
            
        </member>
        <member name="M:mpesaIntegration.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{mpesaIntegration.Data.ApplicationDbContext})">
            <summary>
            Initializes a new instance of the ApplicationDbContext
            </summary>
            <param name="options">Database context options</param>
            
        </member>
        <member name="P:mpesaIntegration.Data.ApplicationDbContext.Users">
            <summary>
            Users table configuration
            </summary>
            
        </member>
        <member name="M:mpesaIntegration.Data.ApplicationDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Configures the database connection and other model settings
            </summary>
            
        </member>
        <member name="M:mpesaIntegration.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Configures entity relationships and constraints
            </summary>
            
        </member>
        <member name="T:mpesaIntegration.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:mpesaIntegration.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:mpesaIntegration.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:mpesaIntegration.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:mpesaIntegration.Migrations.MakeRefreshTokenNullable">
            <inheritdoc />
        </member>
        <member name="M:mpesaIntegration.Migrations.MakeRefreshTokenNullable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:mpesaIntegration.Migrations.MakeRefreshTokenNullable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:mpesaIntegration.Migrations.MakeRefreshTokenNullable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:mpesaIntegration.Models.Authentication.Role">
            <summary>
            Defines the possible user roles within the system.
            </summary>
        </member>
        <member name="F:mpesaIntegration.Models.Authentication.Role.Individual">
            <summary>
            Standard individual user account
            </summary>
        </member>
        <member name="F:mpesaIntegration.Models.Authentication.Role.Business">
            <summary>
            Business or organization account with extended privileges
            </summary>
        </member>
        <member name="T:mpesaIntegration.Models.Authentication.User">
            <summary>
            Represents a user in the authentication system.
            Maps directly to the users table in the database.
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.Id">
            <summary>
            Unique identifier for the user
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.FullName">
            <summary>
            User's full name as it appears on their national ID
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.Email">
            <summary>
            User's email address, used as username for authentication
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.PasswordHash">
            <summary>
            Hashed password - never store plain text passwords
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.PasswordSalt">
            <summary>
            Random salt used in password hashing for additional security
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.MobileNumber">
            <summary>
            User's mobile number for verification and communication
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.Role">
            <summary>
            User's role in the system (Individual or Business)
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.IsEmailVerified">
            <summary>
            Flag indicating whether the account email has been verified
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.CreatedAt">
            <summary>
            Date and time when the user account was created
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.UpdatedAt">
            <summary>
            Date and time of the last update to the user account
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.LastLoginAt">
            <summary>
            Date and time of the user's last login
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.RefreshToken">
            <summary>
            JWT refresh token for maintaining persistent sessions
            </summary>
            
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.User.RefreshTokenExpiryTime">
            <summary>
            Expiration date for the refresh token
            </summary>
        </member>
        <member name="T:mpesaIntegration.Models.Authentication.LoginRequest">
            <summary>
            Data transfer object for login requests.
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.LoginRequest.Email">
            <summary>
            User's email address used for authentication
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.LoginRequest.Password">
            <summary>
            User's password (plain text in request, never stored)
            </summary>
        </member>
        <member name="T:mpesaIntegration.Models.Authentication.RegisterRequest">
            <summary>
            Data transfer object for user registration requests.
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.RegisterRequest.FullName">
            <summary>
            User's full name as it appears on their national ID
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.RegisterRequest.Email">
            <summary>
            User's email address, will be used as username for authentication
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.RegisterRequest.Password">
            <summary>
            User's desired password (plain text in request, will be hashed before storage)
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.RegisterRequest.ConfirmPassword">
            <summary>
            Confirmation of the user's password to prevent typos
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.RegisterRequest.MobileNumber">
            <summary>
            User's mobile number for verification and communication
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.RegisterRequest.Role">
            <summary>
            User's role in the system (Individual or Business)
            </summary>
        </member>
        <member name="T:mpesaIntegration.Models.Authentication.AuthenticationResponse">
            <summary>
            Response object returned after authentication operations.
            Contains authentication results and relevant user information.
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.IsSuccess">
            <summary>
            Indicates whether the authentication operation was successful
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.Message">
            <summary>
            Authentication message (success confirmation or error details)
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.Token">
            <summary>
            JWT access token for authenticated requests
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.TokenExpiration">
            <summary>
            Token expiration time in UTC
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.RefreshToken">
            <summary>
            JWT refresh token for obtaining new access tokens
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.UserId">
            <summary>
            User ID of the authenticated user
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.Email">
            <summary>
            Email of the authenticated user
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.FullName">
            <summary>
            Full name of the authenticated user
            </summary>
        </member>
        <member name="P:mpesaIntegration.Models.Authentication.AuthenticationResponse.Role">
            <summary>
            Role of the authenticated user
            </summary>
        </member>
        <member name="M:mpesaIntegration.Models.Authentication.AuthenticationResponse.Success(mpesaIntegration.Models.Authentication.User,System.String,System.String,System.DateTime)">
            <summary>
            Creates a successful authentication response
            </summary>
            <param name="user">User who was successfully authenticated</param>
            <param name="token">JWT access token</param>
            <param name="refreshToken">JWT refresh token</param>
            <param name="tokenExpiration">Token expiration time</param>
            <returns>Authentication response with user details and tokens</returns>
        </member>
        <member name="M:mpesaIntegration.Models.Authentication.AuthenticationResponse.Failure(System.String)">
            <summary>
            Creates a failed authentication response
            </summary>
            <param name="message">Error message explaining why authentication failed</param>
            <returns>Authentication response with failure details</returns>
        </member>
        <member name="T:mpesaIntegration.Repositories.IUserRepository">
            <summary>
            Repository for handling user data operations
            </summary>
        </member>
        <member name="T:mpesaIntegration.Repositories.UserRepository">
            <summary>
            Implementation of user repository using Entity Framework Core
            </summary>
        </member>
        <member name="M:mpesaIntegration.Repositories.UserRepository.AddUserAsync(mpesaIntegration.Models.Authentication.User)">
            <summary>
            Adds a new user to the database
            </summary>
        </member>
        <member name="M:mpesaIntegration.Repositories.UserRepository.GetUserByEmailAsync(System.String)">
            <summary>
            Retrieves a user by email address
            </summary>
        </member>
        <member name="M:mpesaIntegration.Repositories.UserRepository.UpdateUserAsync(mpesaIntegration.Models.Authentication.User)">
            <summary>
            Updates an existing user record
            </summary>
        </member>
        <member name="M:mpesaIntegration.Repositories.UserRepository.SaveChangesAsync">
            <summary>
            Persists changes to the database
            </summary>
        </member>
        <member name="T:mpesaIntegration.Services.IAuthService">
            <summary>
            Service handling authentication business logic
            </summary>
        </member>
        <member name="M:mpesaIntegration.Services.AuthService.RegisterAsync(mpesaIntegration.Models.Authentication.RegisterRequest)">
            <summary>
            Handles user registration with password hashing
            </summary>
        </member>
        <member name="M:mpesaIntegration.Services.AuthService.LoginAsync(mpesaIntegration.Models.Authentication.LoginRequest)">
            <summary>
            Handles user login with password verification
            </summary>
        </member>
        <member name="M:mpesaIntegration.Services.AuthService.CreatePasswordHash(System.String,System.Byte[]@,System.Byte[]@)">
            <summary>
            Generates password hash and salt using HMACSHA512
            </summary>
        </member>
        <member name="M:mpesaIntegration.Services.AuthService.VerifyPasswordHash(System.String,System.Byte[],System.Byte[])">
            <summary>
            Verifies password against stored hash and salt
            </summary>
        </member>
    </members>
</doc>
